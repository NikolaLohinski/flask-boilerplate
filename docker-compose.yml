version: '2.0'
services:
  postgres:
    container_name: postgres
    restart: always
    build: ./db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db-volume:/var/lib/postgresql/data
    ports:
      - 5432:5432
  flask:
    container_name: flask
    restart: always
    build: ./api
    environment:
      - FLASK_ENV=dev
      - DEFAULT_INVENTIONS_FILE_PATH=/api/data/inventions.json
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5000:5000
    volumes:
      - ./api:/api
    depends_on:
      - postgres
    entrypoint: 
      - /api/init.sh
  webpack:
    container_name: webpack
    restart: always
    build: ./front
    ports:
      - 8080:8080
    volumes:
      - ./front:/bindmount:rw
      - node_modules:/bindmount/node_modules
      - front-end-build:/bindmount/dist
    command: npm run watch
  golang:
    container_name: golang
    restart: always
    build: ./golang
    ports:
      - 8765:8765
    volumes:
      - ./golang:/go
      - front-end-build:/go/static
    working_dir: /go
    command: go run main.go
volumes:
  db-volume:
  front-end-build:
  node_modules: